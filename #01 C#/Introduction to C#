                                      Part 1 Variables
----------------------------------------------------------------------------------------------------
#region Variables
/*
Variables
string str = "ABCD";
char c = 'h';
bool b = true;

Console.WriteLine(str);

//Numrics 
int x = 5;
long y = 5555555555555555;
x = 7;

float f = 5.5f;//smallest
double d = 5.5;
decimal dec = 5.5m;//largest

Console.WriteLine("float : + f"); //ctrl+D نسخ للسطر الاسفل
                                  //Line للطباعه بسطر جديد
//Constants
const double PI = 3.14f; //لا يمكن التعديل على القيمة
                         //PI = 3.15; //Error  */
#endregion
----------------------------------------------------------------------------------------------------
                                    Part 2 Casting
----------------------------------------------------------------------------------------------------
#region Casting 
/*
// تحويل بين ال data types

//Implicit Casting (automatically) - converting a smaller type to a larger type size
using System;

double a = 5.5;
//int num = a; //Error
//لكن يجوز تحويل عدد صحيح الى دبل لان الدبل يقبل ارقام صحيحة وهنا يكون كاستينق اوتوماتيك
// ويجوز تحويل فلوت الى دبل لان دبل اكبر من الفلوت
//يجوز تحويل انتيجر الى لونق لان لونق اكبر من انتيجر

double d = 0.66;
int x = (int)d; //Explicit Casting  //ليس اوتوماتيكي
Console.WriteLine(x); //0  //قد يؤدي لفقدان البيانات
decimal dec = (decimal)a; //الديسيمال ما بتزبط Implicit

//Parsing //String
int xx = 55;
bool bol = true;
string str = xx.ToString(); // تحويل رقم الى سترينق

//من سترينق لداتا تايب اخر

string str1 = "123";
int num1 = int.Parse(str1); //تحويل سترينق الى انتيجر
                            //stri = "abc"; //Error
                            //الحل
                            //int.TryParse(str1, out int num1); //لو ما قدرت تحول بيخلي القيمة صفر بدل ما يطلع ايرور

Console.WriteLine(num1);

const string str2 = "true342"; //str2 = "abc"; //Error
//bool bol2 = bool.Parse(str2); //Error
bool bol2 = bool.TryParse(str2, out bol2); // او bool.TryParse(str2, out bool bol2); اذا ما تعرف البوليان قبل
*/

#endregion
----------------------------------------------------------------------------------------------------
                                Part 3 Var,dynamic,Object
----------------------------------------------------------------------------------------------------
#region Var,dynamic,Object
/*

var number = 5; // لا يمكن تغيير نوع الداتا تايب
                //القيمة هي التي تحدد الداتا تايب
                //number = abc //Error
number = 10; //مسموح تغيير القيمة



dynamic dy = 55; //لكن لا ينصح باستخدامه
dy = "abc"; //مسموح تغيير القيمة والداتا تايب
dy = true; //مسموح تغيير القيمة والداتا تايب
//const dynamic dy2 = 5; //Error لا يمكن استخدام كونست مع دايناميك
//Console.WriteLine(dy+5); //Error لا يمكن اجراء عمليات رياضية مع دايناميك


object obj = 5; //الاوبجيكت هو اساس كل الداتا تايبز
                //لكن لا ينصح باستخدامه
                //obj = "abc"; //مسموح تغيير القيمة والداتا تايب
                //obj = true; //مسموح تغيير القيمة والداتا تايب
                //Console.WriteLine(obj + 5); //Error لا يمكن اجراء عمليات رياضية مع اوبجيكت
obj = false;
obj = 123;
//console.WriteLine(obj + 5); //Error لا يمكن اجراء عمليات رياضية مع اوبجيكت
Console.WriteLine((int)obj + 5); //مسموح اذا حولنا الاوبجيكت الى انتيجر
                                 // ما بزبط اذا كان اخر اشي معرف من اوبجيكت نوع ليس انتيجر او لا يمكن تحويله لانتيجر
                                 //مثلا لو كان اخر اشي معرف من اوبجيكت سترينق مش صح
*/

#endregion
----------------------------------------------------------------------------------------------------
                                Part 4 Execption Handling
----------------------------------------------------------------------------------------------------
#region Exceptions Handling
/*
try
{
    Console.WriteLine("Enter a number: ");
    var num1str = Console.ReadLine(); //input from user always string by default

    Console.WriteLine("Enter another number: ");
    var num2str = Console.ReadLine();

    int num1 = int.Parse(num1str); //لو المستخدم دخل abc بيطلع ايرور
    int num2 = int.Parse(num2str);
    var num3 = num1 / num2;
    //Console.WriteLine(num1 + " / " + num2 + " = " + num3);
    Console.WriteLine($"{num1} / {num2} = {num3}"); //افضل //String Interpolation
}

catch (DivideByZeroException) { //لو المستخدم دخل 0
    Console.WriteLine("You can't divide by zero"); }
catch (FormatException) { //لو المستخدم دخل abc
    Console.WriteLine("Invalid input format"); }  //بقدر احط ex.Message عشان يطلعلي الايرور اللي حصل
catch (OverflowException) { //لو المستخدم دخل رقم كبير جدا
    Console.WriteLine("Number is too large or too small"); }
catch (Exception ex) { //لو في ايرور غير اللي فوق   //مهم جدا    //General Exception
    Console.WriteLine(ex.Message); }  // لازم نحط الجنرال اكسبشن في الاخر
finally {
    Console.WriteLine("Thank you for using our calculator!"); //بيشتغل دايما سواء في حالة النجاح او الفشل
}

*/

#endregion
----------------------------------------------------------------------------------------------------
                                    Part 5 If Statments
----------------------------------------------------------------------------------------------------
#region If Statement

int x = 10;
int y = 20;
if (x > y)
{
    Console.WriteLine("x is greater than y");
}
else if (x < y)
{
    Console.WriteLine("x is less than y");
}
else
{
    Console.WriteLine("x is equal to y");
}

int day = 2;
switch (day)
{
    case 1: Console.WriteLine("Sunday"); break;
    case 2: Console.WriteLine("Monday"); break;
    case 3: Console.WriteLine("Tuesday"); break;
    default: Console.WriteLine("Invalid day"); break;
}

var message = x > y ? "x is greater than y" : x==y ? "x and y are equals" : "x is less than y"; //Ternary Operator

#endregion
----------------------------------------------------------------------------------------------------
