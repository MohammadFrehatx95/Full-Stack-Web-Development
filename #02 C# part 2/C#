#region Loops
/*
for(var i = 0; i <= 10; i++)// i = i + 1
{
    Console.WriteLine(i);
}
*/

/*
var i = 2;
while(i <= 20)
{
    Console.WriteLine(i);

    i += 2; // i = i + 2;
}
*/
#endregion

#region Functions
// PascalCase = StartingPoint // Class + methods + proprties
// camelCase = startingPoint // variables + parameters

public class Program
{
    // The Starting Point Of Our Program
    public static void Main() // Method
    {
        
        var num1 = 5;
        var num2 = 10;

        var summation = AddNumbers(12.5, num1);

       Console.WriteLine(summation);
        

        var number = 5;
        AddFive(ref number);

        Console.WriteLine(number); // ??
    }

    public static int AddFive(ref int x)
    {
        x += 5; // x = x + 5;

        return 0;
    }

    public static int AddNumbers(int x, int y) // Method Signture
    {
        // Method Body
        var result = x + y;
        return result;
    }

    // Overloading 
    public static int AddNumbers(int x, int y, int z) // Number Of Parameters
    {
        // Method Body
        var result = x + y + z;
        return result;
    }

    public static double AddNumbers(int x, double y) // Type Of Parameters
    {
        // Method Body
        var result = x + y;
        return result;
    }

    public static double AddNumbers(double x, int y) // Order Of Parameters
    {
        // Method Body
        var result = x + y;
        return result;
    }
}
#endregion
