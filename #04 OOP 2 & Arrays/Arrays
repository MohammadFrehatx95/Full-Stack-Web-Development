public class Program
{
    public static void Main()
    {
        int number = 15; // one value

        double[] doubNumbers = { 1.5, 2.5, 3.5 };
        string[] strNumbers = { "2", "5", "6" };
        bool[] boolArr = { true, false, true, false, false };


        int[] arrNumber = new int[5]; // fixed size "first problem in array"
        // [0,0,0,0,0] --> Default Values

        int[] arrNumber2 = new int[5] { 1, 2, 3, 4, 5 };

        int[] numbers = { 3, 12, 33, 45, 66, 78 };
        // indexes  0  1    2   3   4   5

        //Console.WriteLine(numbers[1]); // read

        //numbers[1] = 50;// Write
        //Console.WriteLine(numbers[1]); // read
        //numbers[6] --> Error
        //Console.WriteLine(numbers.Length); // length of array
        //Console.WriteLine(numbers.Length - 1 ); // last index

        //Array.Sort(numbers); // Array --> Class Static
        //Array.Reverse(numbers);

       // Console.WriteLine(Array.IndexOf(numbers, 33)); //  2
        //Console.WriteLine(Array.IndexOf(numbers, 99)); // -1 bc it's not found
        /*
        for(int i = 0; i < numbers.Length; i++)
        {
            Console.Write(numbers[i] + " ");
        }
        */

        // Rectangle Array
        int[,] arrRectangle =
        {
            { 1, 2, 3}, // row 0
            { 3, 4, 5 } // row 1
        };

       // Console.WriteLine(arrRectangle[0, 0]); // 1

        for(int i = 0;i  < arrRectangle.GetLength(0);i++) // rows
        {

            for (int j = 0; j < arrRectangle.GetLength(1); j++) // cols
            {
                Console.Write(arrRectangle[i, j] + " ");
            }
            Console.WriteLine();
        }

        int[][] jaggedarr =
        {
            [ 1, 2, 3], // row 0
            [ 3, 4] // row 1
        };

        for (int i = 0; i < jaggedarr.Length; i++) // rows
        {

            for (int j = 0; j < jaggedarr[i].Length; j++) // cols
            {
                Console.Write(jaggedarr[i][j] + " ");
            }
            Console.WriteLine();
        }
    }
}
